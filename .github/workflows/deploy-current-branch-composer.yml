name: Deploy current branch

on:
  workflow_call:
    inputs:
      deploy_path:
        required: true
        type: string

      environment:
        required: true
        type: string

      use_composer:
        required: false
        default: false
        type: string
        description: Set to true to use composer install after deploy

      php_version:
        required: false
        type: string
        description: use a specific php version, if not define, it will use the defaut php bin

    secrets:
      SSH_PRIVATE_KEY:
        required: true
      deploy_port:
        required: true
      deploy_user:
        required: true
      deploy_host:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Configure ssh
        run: |
          eval $(ssh-agent -s)
          echo "SSH_AUTH_SOCK=$(echo $SSH_AUTH_SOCK)" >> $GITHUB_ENV
          echo "SSH_AGENT_PID=$(echo $SSH_AGENT_PID)" >> $GITHUB_ENV
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -

      - name: Scan deploy host key
        run: |
          install -m 700 --directory ~/.ssh
          host_ip=$(host "${{ secrets.deploy_host }}" | awk '{print $NF}')
          ssh-keyscan -p"${{ secrets.deploy_port }}" -H "${{ secrets.deploy_host }}" "$host_ip" >> ~/.ssh/known_hosts 2>/dev/null

      - name: configure ssh control master
        run: |
          config="Host ${{ secrets.deploy_host }}
            ControlMaster auto
            ControlPath ~/.ssh/%C
            ControlPersist 2m
            ForwardAgent yes
            Port ${{ secrets.deploy_port }}
            User ${{ secrets.deploy_user }}"
          echo "$config" >> ~/.ssh/config

      - name: Check if the project is already deployed or clone it
        run: ssh "${{ secrets.deploy_host }}" -- "cd ${{ inputs.deploy_path }} && (test -e .git/config || git clone git@github.com:${{ github.repository }}.git .)"

      - name: Deploy site using ssh to ${{ inputs.environment }}
        run: ssh "${{ secrets.deploy_host }}" -- "cd ${{ inputs.deploy_path }} && git pull"

      - name: Use composer install
        if: github.event.inputs.use_composer == 'true' && github.event.inputs.php_version == ''
        run: ssh "${{ secrets.deploy_host }}" -- "cd ${{ inputs.deploy_path }} && command -v composer >/dev/null && composer install --no-dev"

      - name: Use composer install with a specific php version
        if: github.event.inputs.use_composer == 'true' && github.event.inputs.php_version != ''
        run: ssh "${{ secrets.deploy_host }}" -- "cd ${{ inputs.deploy_path }} && command -v php${{ github.event.inputs.php_version }} >/dev/null && composer=$(command -v composer) && php${{ github.event.inputs.php_version }} $composer install --no-dev"

      - name: Close control master socket
        run: ssh -O check "${{ secrets.deploy_host }}" 2>/dev/null && ssh -O stop "${{ secrets.deploy_host }}"
